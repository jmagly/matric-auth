{"ast":null,"code":"import axios from 'axios';\nimport keycloakService from './keycloak';\nclass ApiService {\n  constructor() {\n    this.api = void 0;\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(async config => {\n      const token = keycloakService.getToken();\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n\n    // Response interceptor to handle 401s\n    this.api.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const keycloak = keycloakService.getKeycloak();\n          const refreshed = await (keycloak === null || keycloak === void 0 ? void 0 : keycloak.updateToken(5));\n          if (refreshed) {\n            originalRequest.headers.Authorization = `Bearer ${keycloak === null || keycloak === void 0 ? void 0 : keycloak.token}`;\n            return this.api(originalRequest);\n          }\n        } catch (refreshError) {\n          keycloakService.logout();\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n  }\n  async get(url, params) {\n    const response = await this.api.get(url, {\n      params\n    });\n    return response.data;\n  }\n  async post(url, data) {\n    const response = await this.api.post(url, data);\n    return response.data;\n  }\n  async put(url, data) {\n    const response = await this.api.put(url, data);\n    return response.data;\n  }\n  async delete(url) {\n    const response = await this.api.delete(url);\n    return response.data;\n  }\n}\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","keycloakService","ApiService","constructor","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","getToken","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","keycloak","getKeycloak","refreshed","updateToken","refreshError","logout","get","url","params","data","post","put","delete","apiService"],"sources":["/home/manitcor/dev/matric-auth/examples/static-site-demo/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\nimport keycloakService from './keycloak';\n\nclass ApiService {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      async (config) => {\n        const token = keycloakService.getToken();\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor to handle 401s\n    this.api.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n\n          try {\n            const keycloak = keycloakService.getKeycloak();\n            const refreshed = await keycloak?.updateToken(5);\n            \n            if (refreshed) {\n              originalRequest.headers.Authorization = `Bearer ${keycloak?.token}`;\n              return this.api(originalRequest);\n            }\n          } catch (refreshError) {\n            keycloakService.logout();\n            return Promise.reject(refreshError);\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async get<T>(url: string, params?: any): Promise<T> {\n    const response = await this.api.get(url, { params });\n    return response.data;\n  }\n\n  async post<T>(url: string, data?: any): Promise<T> {\n    const response = await this.api.post(url, data);\n    return response.data;\n  }\n\n  async put<T>(url: string, data?: any): Promise<T> {\n    const response = await this.api.put(url, data);\n    return response.data;\n  }\n\n  async delete<T>(url: string): Promise<T> {\n    const response = await this.api.delete(url);\n    return response.data;\n  }\n}\n\nconst apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}