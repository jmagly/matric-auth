{"ast":null,"code":"var _jsxFileName = \"/home/manitcor/dev/matric-auth/examples/static-site-demo/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport WorkingApp from './WorkingApp';\nimport UserService from './services/UserService';\n\n// Initialize Keycloak BEFORE rendering the app\n// This is the key to making it work!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderApp = () => {\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(/*#__PURE__*/_jsxDEV(WorkingApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n};\n\n// Start the app by initializing Keycloak first\nUserService.initKeycloak(renderApp);","map":{"version":3,"names":["React","ReactDOM","WorkingApp","UserService","jsxDEV","_jsxDEV","renderApp","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber","initKeycloak"],"sources":["/home/manitcor/dev/matric-auth/examples/static-site-demo/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport WorkingApp from './WorkingApp';\nimport UserService from './services/UserService';\n\n// Initialize Keycloak BEFORE rendering the app\n// This is the key to making it work!\nconst renderApp = () => {\n  const root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n  );\n  \n  root.render(\n    <WorkingApp />\n  );\n};\n\n// Start the app by initializing Keycloak first\nUserService.initKeycloak(renderApp);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,wBAAwB;;AAEhD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;EAEDH,IAAI,CAACI,MAAM,cACTN,OAAA,CAACH,UAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACf,CAAC;AACH,CAAC;;AAED;AACAZ,WAAW,CAACa,YAAY,CAACV,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}