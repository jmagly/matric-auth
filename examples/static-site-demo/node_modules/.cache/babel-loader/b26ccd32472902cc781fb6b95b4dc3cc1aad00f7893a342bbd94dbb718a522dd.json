{"ast":null,"code":"import Keycloak from 'keycloak-js';\nclass SimpleKeycloakService {\n  constructor() {\n    this.keycloak = null;\n    this.initialized = false;\n  }\n  async init() {\n    if (this.initialized && this.keycloak) {\n      return this.keycloak.authenticated || false;\n    }\n    console.log('Initializing Keycloak (Simple)...');\n    this.keycloak = new Keycloak({\n      url: 'http://localhost:8081',\n      realm: 'matric-dev',\n      clientId: 'matric-web'\n    });\n    try {\n      // Very simple init - just parse the URL for auth response\n      const authenticated = await this.keycloak.init({\n        // Don't use any automatic behaviors\n        checkLoginIframe: false,\n        enableLogging: true,\n        pkceMethod: 'S256',\n        responseMode: 'query'\n      });\n      this.initialized = true;\n      if (authenticated) {\n        console.log('✅ User is authenticated!');\n        console.log('User:', this.keycloak.tokenParsed);\n\n        // Setup auto-refresh\n        setInterval(() => {\n          var _this$keycloak;\n          (_this$keycloak = this.keycloak) === null || _this$keycloak === void 0 ? void 0 : _this$keycloak.updateToken(30).catch(() => {\n            console.log('Failed to refresh token');\n          });\n        }, 30000);\n      } else {\n        console.log('❌ User is NOT authenticated');\n      }\n      return authenticated;\n    } catch (error) {\n      console.error('Failed to initialize Keycloak:', error);\n      this.initialized = true;\n      return false;\n    }\n  }\n  isAuthenticated() {\n    var _this$keycloak2;\n    return ((_this$keycloak2 = this.keycloak) === null || _this$keycloak2 === void 0 ? void 0 : _this$keycloak2.authenticated) || false;\n  }\n  getUser() {\n    var _this$keycloak3;\n    return ((_this$keycloak3 = this.keycloak) === null || _this$keycloak3 === void 0 ? void 0 : _this$keycloak3.tokenParsed) || null;\n  }\n  getToken() {\n    var _this$keycloak4;\n    return (_this$keycloak4 = this.keycloak) === null || _this$keycloak4 === void 0 ? void 0 : _this$keycloak4.token;\n  }\n  hasRole(role) {\n    var _this$keycloak5, _this$keycloak5$token, _this$keycloak5$token2;\n    const roles = ((_this$keycloak5 = this.keycloak) === null || _this$keycloak5 === void 0 ? void 0 : (_this$keycloak5$token = _this$keycloak5.tokenParsed) === null || _this$keycloak5$token === void 0 ? void 0 : (_this$keycloak5$token2 = _this$keycloak5$token.realm_access) === null || _this$keycloak5$token2 === void 0 ? void 0 : _this$keycloak5$token2.roles) || [];\n    return roles.includes(role);\n  }\n  login() {\n    var _this$keycloak6;\n    (_this$keycloak6 = this.keycloak) === null || _this$keycloak6 === void 0 ? void 0 : _this$keycloak6.login({\n      redirectUri: window.location.origin + '/'\n    });\n  }\n  logout() {\n    var _this$keycloak7;\n    (_this$keycloak7 = this.keycloak) === null || _this$keycloak7 === void 0 ? void 0 : _this$keycloak7.logout({\n      redirectUri: window.location.origin + '/'\n    });\n  }\n  accountManagement() {\n    var _this$keycloak8;\n    (_this$keycloak8 = this.keycloak) === null || _this$keycloak8 === void 0 ? void 0 : _this$keycloak8.accountManagement();\n  }\n}\nconst simpleKeycloakService = new SimpleKeycloakService();\nexport default simpleKeycloakService;","map":{"version":3,"names":["Keycloak","SimpleKeycloakService","constructor","keycloak","initialized","init","authenticated","console","log","url","realm","clientId","checkLoginIframe","enableLogging","pkceMethod","responseMode","tokenParsed","setInterval","_this$keycloak","updateToken","catch","error","isAuthenticated","_this$keycloak2","getUser","_this$keycloak3","getToken","_this$keycloak4","token","hasRole","role","_this$keycloak5","_this$keycloak5$token","_this$keycloak5$token2","roles","realm_access","includes","login","_this$keycloak6","redirectUri","window","location","origin","logout","_this$keycloak7","accountManagement","_this$keycloak8","simpleKeycloakService"],"sources":["/home/manitcor/dev/matric-auth/examples/static-site-demo/src/services/keycloak-simple.ts"],"sourcesContent":["import Keycloak from 'keycloak-js';\n\nclass SimpleKeycloakService {\n  private keycloak: Keycloak | null = null;\n  private initialized = false;\n\n  async init(): Promise<boolean> {\n    if (this.initialized && this.keycloak) {\n      return this.keycloak.authenticated || false;\n    }\n\n    console.log('Initializing Keycloak (Simple)...');\n    \n    this.keycloak = new Keycloak({\n      url: 'http://localhost:8081',\n      realm: 'matric-dev',\n      clientId: 'matric-web',\n    });\n\n    try {\n      // Very simple init - just parse the URL for auth response\n      const authenticated = await this.keycloak.init({\n        // Don't use any automatic behaviors\n        checkLoginIframe: false,\n        enableLogging: true,\n        pkceMethod: 'S256',\n        responseMode: 'query'\n      });\n\n      this.initialized = true;\n      \n      if (authenticated) {\n        console.log('✅ User is authenticated!');\n        console.log('User:', this.keycloak.tokenParsed);\n        \n        // Setup auto-refresh\n        setInterval(() => {\n          this.keycloak?.updateToken(30).catch(() => {\n            console.log('Failed to refresh token');\n          });\n        }, 30000);\n      } else {\n        console.log('❌ User is NOT authenticated');\n      }\n\n      return authenticated;\n    } catch (error) {\n      console.error('Failed to initialize Keycloak:', error);\n      this.initialized = true;\n      return false;\n    }\n  }\n\n  isAuthenticated(): boolean {\n    return this.keycloak?.authenticated || false;\n  }\n\n  getUser(): any {\n    return this.keycloak?.tokenParsed || null;\n  }\n\n  getToken(): string | undefined {\n    return this.keycloak?.token;\n  }\n\n  hasRole(role: string): boolean {\n    const roles = (this.keycloak?.tokenParsed as any)?.realm_access?.roles || [];\n    return roles.includes(role);\n  }\n\n  login(): void {\n    this.keycloak?.login({\n      redirectUri: window.location.origin + '/'\n    });\n  }\n\n  logout(): void {\n    this.keycloak?.logout({\n      redirectUri: window.location.origin + '/'\n    });\n  }\n\n  accountManagement(): void {\n    this.keycloak?.accountManagement();\n  }\n}\n\nconst simpleKeycloakService = new SimpleKeycloakService();\nexport default simpleKeycloakService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}