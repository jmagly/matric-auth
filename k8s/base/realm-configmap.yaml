apiVersion: v1
kind: ConfigMap
metadata:
  name: matric-realm-config
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: matric-platform
data:
  matric-realm.json: |
    {
      "realm": "matric",
      "enabled": true,
      "displayName": "MATRIC Platform",
      "displayNameHtml": "<div class=\"kc-logo-text\"><span>MATRIC Platform</span></div>",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": true,
      "verifyEmail": true,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": true,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "name": "admin",
            "description": "Administrator role",
            "composite": false,
            "clientRole": false,
            "containerId": "matric"
          },
          {
            "name": "user",
            "description": "Standard user role",
            "composite": false,
            "clientRole": false,
            "containerId": "matric"
          },
          {
            "name": "moderator",
            "description": "Moderator role",
            "composite": false,
            "clientRole": false,
            "containerId": "matric"
          }
        ]
      },
      "groups": [
        {
          "name": "administrators",
          "path": "/administrators",
          "realmRoles": ["admin"]
        },
        {
          "name": "users",
          "path": "/users",
          "realmRoles": ["user"]
        },
        {
          "name": "moderators",
          "path": "/moderators",
          "realmRoles": ["moderator"]
        }
      ],
      "defaultRoles": ["user"],
      "requiredCredentials": ["password"],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": ["totpAppGoogleName", "totpAppMicrosoftAuthenticatorName"],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "MATRIC Platform",
      "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "passwordPolicy": "length(12) and digits(1) and lowerCase(1) and upperCase(1) and specialChars(1) and notUsername and notEmail and passwordHistory(5)",
      "clients": [
        {
          "clientId": "matric-web-app",
          "name": "MATRIC Web Application",
          "description": "Main web application client",
          "rootUrl": "https://app.matric.local",
          "adminUrl": "https://app.matric.local",
          "baseUrl": "https://app.matric.local",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "https://app.matric.local/*",
            "https://app-dev.matric.local/*"
          ],
          "webOrigins": [
            "https://app.matric.local",
            "https://app-dev.matric.local"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1703001600",
            "backchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "name": "roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "clientId": "matric-api",
          "name": "MATRIC API",
          "description": "Backend API client for service-to-service communication",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1703001600",
            "backchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "name": "matric-scope",
          "description": "MATRIC platform specific scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "Access to MATRIC platform resources"
          },
          "protocolMappers": [
            {
              "name": "matric-audience",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "matric-api",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "matric-scope"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": true,
      "eventsListeners": ["jboss-logging"],
      "enabledEventTypes": [
        "SEND_RESET_PASSWORD",
        "UPDATE_CONSENT_ERROR",
        "GRANT_CONSENT",
        "VERIFY_PROFILE_ERROR",
        "UPDATE_TOTP",
        "REVOKE_GRANT",
        "UPDATE_PROFILE",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "UPDATE_PROFILE_ERROR",
        "UPDATE_PASSWORD_ERROR",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "LOGOUT",
        "REGISTER",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "UPDATE_PASSWORD",
        "CLIENT_DELETE",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "CLIENT_DELETE_ERROR",
        "VERIFY_EMAIL",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION",
        "INVALID_SIGNATURE_ERROR",
        "REMOVE_TOTP",
        "REVOKE_GRANT_ERROR",
        "LOGIN",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "SEND_VERIFY_EMAIL",
        "RESET_PASSWORD",
        "CLIENT_REGISTER_ERROR",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "UPDATE_EMAIL",
        "REGISTER_ERROR",
        "REVOKE_GRANT",
        "LOGOUT_ERROR"
      ],
      "adminEventsEnabled": true,
      "adminEventsDetailsEnabled": true,
      "identityProviders": [],
      "identityProviderMappers": [],
      "internationalizationEnabled": true,
      "supportedLocales": ["en", "es", "fr", "de"],
      "defaultLocale": "en",
      "authenticationFlows": [
        {
          "alias": "matric-browser-flow",
          "description": "MATRIC browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            },
            {
              "flowAlias": "matric-forms",
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "userSetupAllowed": false,
              "authenticatorFlow": true
            }
          ]
        },
        {
          "alias": "matric-forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            },
            {
              "flowAlias": "matric-browser-conditional-otp",
              "requirement": "CONDITIONAL",
              "priority": 20,
              "userSetupAllowed": false,
              "authenticatorFlow": true
            }
          ]
        },
        {
          "alias": "matric-browser-conditional-otp",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "authenticatorFlow": false
            }
          ]
        }
      ],
      "browserFlow": "matric-browser-flow",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "frontendUrl": ""
      },
      "keycloakVersion": "26.3.2"
    }