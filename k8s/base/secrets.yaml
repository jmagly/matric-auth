# External Secrets Operator integration for Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: keycloak
spec:
  provider:
    vault:
      server: "https://vault.matric.local"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "keycloak-role"
          serviceAccountRef:
            name: keycloak
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-db-secret
  namespace: keycloak
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: keycloak-db-secret
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: keycloak/database
      property: username
  - secretKey: password
    remoteRef:
      key: keycloak/database
      property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-admin-secret
  namespace: keycloak
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: keycloak-admin-secret
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: keycloak/admin
      property: username
  - secretKey: password
    remoteRef:
      key: keycloak/admin
      property: password
---
# TLS certificate managed by cert-manager
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: keycloak-tls
  namespace: keycloak
spec:
  secretName: keycloak-tls-secret
  dnsNames:
  - auth.matric.local
  - auth-dev.matric.local
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer